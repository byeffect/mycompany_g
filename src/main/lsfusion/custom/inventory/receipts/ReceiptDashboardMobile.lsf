MODULE ReceiptDashboardMobile;

REQUIRE ReceiptMobile, ReceiptPutAwayLot, ReceiptCustom, ReceiptPlan;

NAMESPACE Inventory;

receive 'Принять' (Receipt r) {
    SHOW receiptMobile OBJECTS r = r DOCKED NOWAIT;
} CHANGEMOUSE 'DBLCLK';

notFilledNote (Receipt r) = GROUP SUM 1 IF receipt(ReceiptLine l) = r AND initialDemand(l) AND NOT done(l) = initialDemand(l) AND NOT note(l); 
FORM inputReceiptNote 'Примечание'
    OBJECTS r = Receipt PANEL
    
    OBJECTS l = ReceiptLine
    PROPERTIES(l) READONLY BACKGROUND RGB(255,212,212) IF NOT note(l) nameProduct, initialDemand, done
    PROPERTIES(l) note PANEL
    
    PROPERTIES formROk = formOk() DISABLEIF notFilledNote(r)
    
    FILTERS receipt(l) = r,
            initialDemand(l) AND NOT done(l) = initialDemand(l)
;

DESIGN inputReceiptNote {
    OBJECTS {
        REMOVE BOX(l);
        MOVE GRID(l) {
            flex = 0;
            height = -1;
            PROPERTY(initialDemand(l)) { charWidth = 4; }
            PROPERTY(done(l)) { charWidth = 4; }
        }
        MOVE PROPERTY(note(l)) {
            caption = '';
            height = 100;
            fill = 3;
        }
    }
    TOOLBARRIGHT {
        REMOVE PROPERTY(formOk());
        MOVE PROPERTY(formROk) BEFORE PROPERTY(formCancel());
    }
}

markAsDone 'Завершить' (Receipt r) {
    NEWSESSION { 
        done(r) <- TRUE;
        putAway(r) <- TRUE;
        done(ReceiptLine l) <- quantityScan(l) WHERE receipt(l) = r;
        done(ReceiptLine l, Lot lt) <- quantityScan(r, lt) IF product(l) = product(lt) WHERE receipt(l) = r;
        
        FOR NUMERIC[16,3] q = quantityScan(r, product(ReceiptLine rl), Location l) IF receipt(rl) = r INLINE NEW p = ReceiptPutAway DO {
            receiptLine(p) <- rl;
            location(p) <- l;
            quantity(p) <- q;
            
            quantity(p, Lot lt) <- quantityScan(r, lt, l) IF product(rl) = product(lt);
        }
        
        IF GROUP SUM 1 IF initialDemand(ReceiptLine l) AND NOT done(l) = initialDemand(l) THEN {
            DIALOG inputReceiptNote OBJECTS r = r NOMANAGESESSION DO {
                APPLY;
            }
        } ELSE
            ASK 'Завершить приемку ?' DO APPLY;
    }
};

open 'Открыть' (Receipt r) {
    NEWSESSION {
        readonlyReceipt() <- TRUE;
        SHOW receiptMobile OBJECTS r = r DOCKED NOWAIT;
    }
} CHANGEMOUSE 'DBLCLK';
return 'Вернуть' (Receipt r) {
    NEWSESSION { 
        done(r) <- NULL;
        putAway(r) <- NULL;
        done(ReceiptLine l) <- NULL WHERE receipt(l) = r;
        done(ReceiptLine l, Lot lt) <- NULL WHERE receipt(l) = r;
        DELETE ReceiptPutAway p WHERE receipt(receiptLine(p)) = r;
        APPLY;
    }
} CONFIRM;

FORM receiptDashboard 'Приемка'
    OBJECTS rr = Receipt
    PROPERTIES(rr) READONLY BACKGROUND IF initialDemand(rr) = quantityScan(rr) THEN RGB(212,255,212) ELSE
                                       IF quantityScan(rr) THEN RGB(255,255,212)
                            htmlReceipt, initialDemand, quantityScan
    PROPERTIES(rr) receive, markAsDone
    FILTERS status(rr) = ReceiptStatus.ready
    
    OBJECTS rd = Receipt
    PROPERTIES(rd) READONLY htmlReceipt, initialDemand, quantityScan
    PROPERTIES(rd) open, return
    FILTERS done(rd)
    FILTERGROUP lastDays
        FILTER 'Последние' executionDate(rd) >= subtract(currentDate(), 1)

    OBJECTS dp = DATE PANEL
    PROPERTIES(dp) datePlan 'Дата' = VALUE
    
    OBJECTS rp = Receipt
    PROPERTIES(rp) BACKGROUND IF done(rp) THEN RGB(212,255,212) ELSE
                              IF ready(rp) THEN RGB(255,255,212) 
                   READONLY htmlReceipt, initialDemand, quantityScan
    FILTERS receiveDate(rp) = dp
;

countReceiptReady = GROUP SUM 1 IF status(Receipt rr) = ReceiptStatus.ready;

DESIGN receiptDashboard {
    OBJECTS {
        class = '';
        NEW pane {
            fill = 1;
            tabbed = TRUE;
            NEW ready {
                caption = badged('В работе', countReceiptReady());
                MOVE GRID(rr) {
                    PROPERTY(htmlReceipt(rr)) { caption = ''; }
                    PROPERTY(initialDemand(rr)) { charWidth = 4; }
                    PROPERTY(quantityScan(rr)) { charWidth = 4; }
                }
                NEW readyActions {
                    alignment = STRETCH;
                    horizontal = TRUE;
                    MOVE PROPERTY(receive(rr)) { fill = 2; }
                    MOVE PROPERTY(markAsDone(rr)) { fill = 1; }
                }
                REMOVE BOX(rr);
            }
            NEW done {
                caption = 'Принятые';
                MOVE GRID(rd) {
                    PROPERTY(htmlReceipt(rd)) { caption = ''; }
                }
                NEW doneActions {
                    alignment = STRETCH;
                    horizontal = TRUE;
                    MOVE PROPERTY(open(rd)) { fill = 2; }
                    MOVE PROPERTY(return(rd)) { fill = 1; }
                }
                REMOVE BOX(rd);
            }
            NEW plan {
                caption = badged('План', receiveReceipt(dp));
                MOVE PROPERTY(datePlan);
                MOVE GRID(rp);
                REMOVE BOX(rp);
            }
        }
    }
    REMOVE TOOLBARBOX;
}

startReceiving 'Начать приемку' (Receipt r) {
    NEWSESSION APPLY { ready(r) <- TRUE; }
    SEEK receiptDashboard.rr = r;
    ACTIVATE TAB receiptDashboard.ready;
}

EXTEND FORM receiptDashboard
    PROPERTIES(rp) startReceiving
;

DESIGN receiptDashboard {
    plan {
        MOVE PROPERTY(startReceiving(rp)) { alignment = STRETCH; }
    }
}

NAVIGATOR {
    dashboards {
        NEW receiptDashboard;
    }
}

EXTEND FORM receiptDashboard
    PROPERTIES() barcode ON CHANGE {
        INPUT b = STRING DO
            IF NOT GROUP SUM 1 IF vendorReference(Receipt r) = b AND NOT done(r) AND NOT canceled(r) THEN {
                beep(warningSound(), TRUE);
                MESSAGE 'Не найдено указанного номера приемки';
            } ELSE {
                FOR Receipt r = (GROUP MAX Receipt rc IF vendorReference(rc) = b AND NOT done(rc) AND NOT canceled(rc)) DO {
                    NEWSESSION APPLY { ready(r) <- TRUE; }
                    SEEK receiptDashboard.rr = r;
                    IF NOT canceled() THEN beep(infoSound(), TRUE);
                }
            }
    }
;

DESIGN receiptDashboard {
    OBJECTS {
        MOVE PROPERTY(barcode()) FIRST {
            caption = '';
            placeholder = 'Введите номер поставки';
            alignment = STRETCH;
        }
    }
}

showMobileForms() + {
    IF permit(currentUser(), navigatorElementCanonicalName('Inventory.receiptDashboard')) THEN
        SHOW receiptDashboard NOWAIT;
}