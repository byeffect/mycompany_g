MODULE LotMobile;

REQUIRE LotCustom, InventoryCustom, Sound, LocationProduct, Mobile;

NAMESPACE Inventory;

htmlInvLedger '' (InvLedger il) = HTML ('<div>' + (CONCAT '&nbsp;',
    '<b>' + class(il) + '</b>',
    '(' + type(il) + ')',
    '<u>' + number(il) + '</u>',
    '<i>' + namePartner(il) + '</i>',
    '<font size="-1">' + nameFromLocation(il) + '</font>',
    '<font size="-1">' + '->' + nameToLocation(il) + '</font>') + '</div>');

nameLocations 'Locations' (Lot l) = nameLocations(product(l));

FORM imeiMobile 'IMEI'
    OBJECTS l = Lot NULL PANEL
    PROPERTIES() barcodeNumeric ON CHANGE {
        INPUT s = STRING LIST id(Lot ll) DO {
            IF lot(s) THEN {
                SEEK imeiMobile.l = lot(s);
                beep(infoSound(), TRUE);
            } ELSE {
                beep(warningSound(), TRUE);
                MESSAGE 'Не найдено указанного IMEI';
            }
        }
    }
    PROPERTIES(l) READONLY id, nameVendor, nameProduct, nameLocations 
    
    OBJECTS il = InvLedger
    PROPERTIES READONLY 
                        dateTime(il), htmlInvLedger(il)
    FILTERS quantity(il, l)
;

DESIGN imeiMobile {
    OBJECTS {
        class = '';
        NEW pane {
            fill = 1;
            NEW imei {
                alignment = STRETCH;
                MOVE PROPERTY(barcodeNumeric()) {
                    caption = '';
                    placeholder = 'Введите штрих-код';
                }
                MOVE PROPERTY(nameProduct(l)) { caption = ''; fontSize = 24; focusable = FALSE; }
                MOVE PROPERTY(id(l)) { focusable = FALSE; }
                MOVE PROPERTY(nameVendor(l)) { focusable = FALSE; }
                MOVE PROPERTY(nameLocations(l)) { focusable = FALSE; }
            }
            MOVE GRID(il);
            REMOVE BOX(il);
        }
    }
    REMOVE TOOLBARBOX;
}

NAVIGATOR {
    dashboards {
        NEW imeiMobile;
    }
}

showMobileForms() + {
    IF permit(currentUser(), navigatorElementCanonicalName('Inventory.imeiMobile')) THEN
        SHOW imeiMobile NOWAIT;
}