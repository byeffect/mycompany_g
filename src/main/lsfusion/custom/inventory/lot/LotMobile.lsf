MODULE LotMobile;

REQUIRE LotCustom, InventoryCustom, Sound, LocationProduct, Mobile, ProductModel;

NAMESPACE Inventory;

htmlInvLedger '' (InvLedger il) = HTML ('<div>' + (CONCAT '&nbsp;',
    '<b>' + class(il) + '</b>',
    '(' + type(il) + ')',
    '<u>' + number(il) + '</u>',
    '<i>' + namePartner(il) + '</i>',
    '<font size="-1">' + nameFromLocation(il) + '</font>',
    '<font size="-1">' + '->' + nameToLocation(il) + '</font>') + '</div>');

nameLocations 'Locations' (Lot l) = nameLocations(product(l));
idDefaultModel 'SKU' (Lot l) = idDefaultModel(product(l));

FORM imeiMobile 'IMEI'
    OBJECTS l = Lot NULL PANEL
    PROPERTIES() barcodeNumeric ON CHANGE {
        INPUT s = STRING LIST id(Lot ll) DO {
            IF lot(s) THEN {
                SEEK imeiMobile.l = lot(s);
                beep(infoSound(), TRUE);
            } ELSE {
                beep(warningSound(), TRUE);
                MESSAGE 'Не найдено указанного IMEI';
            }
        }
    }
    PROPERTIES(l) READONLY id, nameVendor, idDefaultModel, nameProduct, nameLocations 
    
    OBJECTS il = InvLedger
    PROPERTIES READONLY 
                        dateTime(il), htmlInvLedger(il)
    FILTERS quantity(il, l) OR in(il, l)
;

DESIGN imeiMobile {
    OBJECTS {
        class = '';
        NEW pane {
            fill = 1;
            NEW imei {
                alignment = STRETCH;
                MOVE PROPERTY(barcodeNumeric()) {
                    caption = '';
                    placeholder = 'Введите штрих-код';
                }
                MOVE PROPERTY(nameProduct(l)) { caption = ''; fontSize = 24; focusable = FALSE; }
                MOVE PROPERTY(id(l)) { focusable = FALSE; }
                MOVE PROPERTY(idDefaultModel(l)) { focusable = FALSE; }
                MOVE PROPERTY(nameVendor(l)) { focusable = FALSE; }
                MOVE PROPERTY(nameLocations(l)) { focusable = FALSE; }
            }
            MOVE GRID(il);
            REMOVE BOX(il);
        }
    }
    REMOVE TOOLBARBOX;
}

NAVIGATOR {
    dashboards {
        NEW imeiMobile;
    }
}

showMobileForms() + {
    IF permit(currentUser(), navigatorElementCanonicalName('Inventory.imeiMobile')) THEN
        SHOW imeiMobile NOWAIT;
}

originalLot 'Исходная партия'  = DATA Lot (Lot);
idOriginalLot 'Исходная партия' (Lot l) = id(originalLot(l)) IN id;

readonlyId (Lot l) += TRUE IF originalLot(l);

in (InvLedger i, Lot l) += TRUE IF quantity(i, originalLot(l));

EXTEND FORM lot
    PROPERTIES(l) idOriginalLot SHOWIF originalLot(l)
;

DESIGN lot {
    header {
        MOVE PROPERTY(idOriginalLot(l)) { alignment = STRETCH; };
    }
}

FORM dialogMobileLot 'Выбор партии'
    OBJECTS l = Lot
    PROPERTIES(l) READONLY id, idProduct, nameProduct
;

createULNLot 'Создать БУ' () {
    DIALOG dialogMobileLot OBJECTS l INPUT DO {
        IF l THEN NEWSESSION {
            NEW newLot = Lot {
                originalLot(newLot) <- l;                    
                seriesNumber(newLot) <- seriesNumber(l);
                                
                DIALOG lot OBJECTS l = newLot DOCKED DO {} ELSE RETURN;
                
                APPLY;
            }
        }
    }    
}

WHEN LOCAL SETCHANGED(originalLot(Lot l)) DO {
    IF PREV(originalLot(l)) AND id(l) THEN {
        id(PREV(originalLot(l))) <- id(l);
    }
    
    id(l) <- id(originalLot(l));
    id(originalLot(l)) <- id(l) + 'ULN';
    seriesNumber(l) <- seriesNumber(originalLot(l));
}

WHEN LOCAL DROPPED (originalLot(Lot l)) DO {
    IF PREV(originalLot(l)) AND id(l) THEN {
        id(PREV(originalLot(l))) <- id(l);
    }
}

EXTEND FORM lots
    PROPERTIES (l) READONLY idOriginalLot
    PROPERTIES () createULNLot DRAW l TOOLBAR
;